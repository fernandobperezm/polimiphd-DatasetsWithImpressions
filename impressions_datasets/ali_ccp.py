import os
from functools import cached_property
from typing import Any

import dask.dataframe as dd
import numpy as np
import pandas as pd
from dask import delayed


def extract_user_id(df: dd.DataFrame) -> dd.DataFrame:
    df_split_by_feature = df["features_list"].str.extract(
        r"(?P<feature_field_id_user>101)"
        r"\x02(?P<user_id>\d+)"
        r"\x03(?P<value>\d+.\d+)"
    )
    df["user_id"] = df_split_by_feature["user_id"]
    return df


def extract_item_id(df: dd.DataFrame) -> dd.DataFrame:
    df_split_by_feature = df["features_list"].str.extract(
        r"(?P<feature_field_id_item>205)"
        r"\x02(?P<item_id>\d+)"
        r"\x03(?P<value>\d+.\d+)"
    )
    df["item_id"] = df_split_by_feature["item_id"]
    return df


class DatasetAliCCP:
    def __init__(self, dir_datasets: str):
        self.dir_dataset = os.path.join(
            dir_datasets,
            "Ali-CCP",
            "",
        )
        self.file_data_train = os.path.join(
            self.dir_dataset,
            "sample_skeleton_train.csv",
        )
        self.file_features_train = os.path.join(
            self.dir_dataset,
            "common_features_train.csv",
        )

        self.file_data_test = os.path.join(
            self.dir_dataset,
            "sample_skeleton_test.csv",
        )
        self.file_features_test = os.path.join(
            self.dir_dataset,
            "common_features_test.csv",
        )

        self.columns_data = [
            "id",
            "num_clicks",
            "num_conversions",
            "common_feature_index",
            "feature_num",
            "features_list",
        ]
        self.columns_features = [
            "common_feature_index",
            "feature_num",
            "features_list",
        ]

        self.dtypes_data = {
            # First row sample_skeleton_train.csv:
            # "1,0,0,bacff91692951881,9,21090522181.021090645531.021090934451.021691547801.030193516651.020541862221.020683167991.020784162051.050893550390.69315"
            "id": np.int32,  # 1
            "num_clicks": np.int32,  # 0
            "num_conversions": np.int32,  # 0
            "common_feature_index": pd.StringDtype(),  # bacff91692951881
            "feature_num": np.int32,  # 9
            "features_list": pd.StringDtype(),  # 21090522181.021090645531.021090934451.021691547801.030193516651.020541862221.020683167991.020784162051.050893550390.69315
        }
        self.dtypes_features = {
            # First row sample_skeleton_train.csv:
            # 84dceed2e3a667f8,343,101313191.012534387741.012634387791.012734387821.012838648851.012938648881.0150_1438788823.28343150_1439609392.44235150_1439005791.17865150_1439302260.45932150_1438773651.94591150_1438751030.94895150_1438851871.44692150_1438686171.92176150_1439576211.84577150_1439166842.23356150_1439439351.25276150_1439331112.72458150_1438760750.88253150_1438749840.34854150_1439319060.77334150_1439600413.62434150_1439601761.64229150_1439313292.44954150_1439171541.79176150_1439605712.28574150_1439404352.03693150_1438689422.73001150_1439105463.03255150_1439259043.79173150_1438756162.13025150_1438709670.60595150_1438960151.92176150_1438835072.74084150_1439640921.92176150_1439229110.34854150_1439255822.07944150_1439278201.20387150_1438792552.23356150_1439244231.4272150_1439535970.91629150_1439178751.7492150_1439137292.62706150_1439132243.56482150_1438847951.64229150_1439097952.19722150_1438967650.45932150_1438900232.03693150_1438952603.60414150_1438785641.17865150_1439553583.60414150_1438964022.6856150_1439565652.03693150_1439608151.55814150_1438988370.45932150_1438901372.15952150_1439374722.51228150_1439356692.82334150_1439640793.65066150_1439319263.14631150_1438785632.81343150_1439068360.45932150_1438663242.55202150_1438886261.55814150_1438822592.14978150_1439111360.45932150_1439532810.91629150_1438708881.2762150_1438839210.34854150_1438750232.28574150_1438742582.59652150_1439236613.56719150_1439432570.34854150_1439370811.46626150_1439220411.20387150_1439223473.6784150_1439564650.81093150_1438858473.09481150_1439030782.30259150_1439594640.45932150_1439244482.29425150_1439213330.94895150_1439206962.37491150_1439196002.83321150_1439086172.57771150_1438981520.45932150_1439145011.70475150_1439304413.10234150_1438946032.74084150_1439146341.93398150_1438735011.79176150_1439638400.60595150_1439546840.60595150_1439325841.4272150_1438780812.76739150_1438927680.34854150_1439198740.45932150_1439557072.14007150_1438827422.70805150_1439039132.67415150_1439386003.44999150_1438748660.77334150_1439353102.98735150_1439342090.45932150_1439035831.25276150_1439058200.88253150_1439365111.8718150_1439355722.14007150_1439640393.29891150_1438882822.539150_1439212932.55202150_1438873440.60595150_1439139450.88253150_1439124750.98095150_1439133173.22219150_1439383640.94895150_1439410371.0116150_1438707900.84715150_1439318871.0116150_1439631393.4095150_1438753150.84715150_1438721381.46626150_1439001321.7492150_1439497652.8622150_1438859812.95751150_1438921553.82864150_1439057251.0116150_1439176011.17865150_1439506191.04134150_1438979712.07944150_1438948922.23356150_1439302132.4987312134386871.0150_1439491442.78809127_1437810410.69315127_1438509350.69315127_1438502350.69315127_1436387680.69315127_1438581941.94591127_1435927960.69315127_1436046280.69315127_1435864960.69315127_1435690542.07944127_1434855791.09861127_1437839520.69315127_1437530740.69315127_1438112040.69315127_1436060750.69315127_1436477201.79176127_1434613570.69315127_1437156590.69315127_1435812220.69315127_1436574792.56495127_1435049600.69315127_1437488720.69315127_1434895760.69315127_1434683210.69315127_1435843270.69315127_1437679580.69315127_1435490320.69315127_1437219702.19722127_1434392070.69315127_1437417330.69315127_1436412180.69315127_1435912070.69315127_1438453521.09861127_1437734580.69315127_1435984561.60944127_1435800902.99573127_1437640170.69315127_1437911790.69315127_1435351791.79176127_1434537300.69315127_1436341610.69315127_1438226010.69315127_1435121832.30259127_1437605990.69315127_1436884820.69315127_1437985440.69315127_1436465340.69315127_1438370351.38629127_1437364230.69315127_1437207231.09861127_1438065410.69315127_1436209750.69315127_1434488600.69315127_1434758691.09861127_1435239331.09861127_1436296990.69315127_1437752380.69315127_1437853990.69315127_1434641230.69315127_1434701140.69315127_1437882660.69315127_1436504310.69315127_1434497691.09861127_1436761472.94444127_1434714540.69315127_1434763113.85015109_144508772.30259109_144474141.79176109_144464420.69315109_144509890.69315109_144516362.77259109_144490820.69315109_144572042.07944109_144490783.7612109_144506563.3322109_144506574.94164109_144490814.33073109_144557042.19722109_144493123.17805109_144508730.69315109_144514480.69315109_144518221.38629109_144508652.94444109_144511161.60944109_144468722.48491109_144508752.07944109_144508831.38629109_144464511.38629109_144511240.69315109_144511150.69315109_144568490.69315109_144508722.19722109_144533093.21888109_144509951.09861109_144516393.04452109_144506582.94444109_144506591.09861109_144490833.09104109_144508700.69315109_144501740.69315109_144508382.48491110_149599610.69315110_146262140.69315110_1428695011.09861110_145999150.69315110_1433163482.99573110_1430405010.69315110_146290251.60944110_1429852790.69315110_1419341840.69315110_148850781.09861110_145422040.69315110_1418120830.69315110_149531620.69315110_1432031330.69315110_1429433431.38629110_1424897380.69315110_147214711.09861110_1423675700.69315110_1422036600.69315110_1417525730.69315110_1426118342.07944110_145020591.79176110_1432937480.69315110_146304780.69315110_1412171380.69315110_1421373250.69315110_146614250.69315110_1433904060.69315110_1411231720.69315110_1424205430.69315110_1432260140.69315110_1412836450.69315110_1426444320.69315110_1410078590.69315110_1411905300.69315110_1429228811.60944110_147048730.69315110_1430298410.69315110_1423352520.69315110_1410293130.69315110_1424799430.69315110_147035341.09861110_1419137440.69315110_147930221.79176110_147386400.69315110_1431273980.69315110_1421122950.69315110_1430506090.69315110_1432551281.09861110_1430257551.79176110_1422069110.69315110_1415126410.69315110_1423708150.69315110_1411062661.09861110_1429642870.69315110_1411637052.63906110_1429564160.69315110_1432662971.38629110_1421332632.07944110_1420880240.69315110_1429341510.69315110_1430683730.69315110_148036760.69315110_149947380.69315110_1414573990.69315110_147069000.69315110_1417237860.69315110_1410243030.69315110_1429851070.69315110_1428404920.69315110_1420016210.69315110_1422670320.69315110_1428114120.69315110_1410842131.09861110_1429016260.69315110_1423144462.30259110_1420640920.69315110_1430335090.69315110_1422982520.69315110_1432706623.13549110_1433573080.69315110_1418390780.69315110_1430097030.69315110_149085410.69315110_147934220.69315110_1428865470.69315110_1410532450.69315110_1431875040.69315110_1433432480.69315110_1417328641.94591110_1428340530.69315110_1429637575.40717110_1426835550.69315110_1411526090.69315110_1431936720.69315110_1418785661.09861110_1424519021.38629110_1429010850.69315110_1413047212.07944110_1429904841.09861110_1428115731.38629110_149622190.69315110_1431497564.11087110_1433957640.69315110_1430012330.69315110_1411764012.56495110_1423908790.6931512234387621.012434387691.0
            "common_feature_index": pd.StringDtype(),  # 84dceed2e3a667f8
            "feature_num": np.int32,  # 343
            "features_list": pd.StringDtype(),  # 101313191.012534387741.012634387791.012734387821.012838648851.012938648881.0150_1438788823.28343150_1439609392.44235150_1439005791.17865150_1439302260.45932150_1438773651.94591150_1438751030.94895150_1438851871.44692150_1438686171.92176150_1439576211.84577150_1439166842.23356150_1439439351.25276150_1439331112.72458150_1438760750.88253150_1438749840.34854150_1439319060.77334150_1439600413.62434150_1439601761.64229150_1439313292.44954150_1439171541.79176150_1439605712.28574150_1439404352.03693150_1438689422.73001150_1439105463.03255150_1439259043.79173150_1438756162.13025150_1438709670.60595150_1438960151.92176150_1438835072.74084150_1439640921.92176150_1439229110.34854150_1439255822.07944150_1439278201.20387150_1438792552.23356150_1439244231.4272150_1439535970.91629150_1439178751.7492150_1439137292.62706150_1439132243.56482150_1438847951.64229150_1439097952.19722150_1438967650.45932150_1438900232.03693150_1438952603.60414150_1438785641.17865150_1439553583.60414150_1438964022.6856150_1439565652.03693150_1439608151.55814150_1438988370.45932150_1438901372.15952150_1439374722.51228150_1439356692.82334150_1439640793.65066150_1439319263.14631150_1438785632.81343150_1439068360.45932150_1438663242.55202150_1438886261.55814150_1438822592.14978150_1439111360.45932150_1439532810.91629150_1438708881.2762150_1438839210.34854150_1438750232.28574150_1438742582.59652150_1439236613.56719150_1439432570.34854150_1439370811.46626150_1439220411.20387150_1439223473.6784150_1439564650.81093150_1438858473.09481150_1439030782.30259150_1439594640.45932150_1439244482.29425150_1439213330.94895150_1439206962.37491150_1439196002.83321150_1439086172.57771150_1438981520.45932150_1439145011.70475150_1439304413.10234150_1438946032.74084150_1439146341.93398150_1438735011.79176150_1439638400.60595150_1439546840.60595150_1439325841.4272150_1438780812.76739150_1438927680.34854150_1439198740.45932150_1439557072.14007150_1438827422.70805150_1439039132.67415150_1439386003.44999150_1438748660.77334150_1439353102.98735150_1439342090.45932150_1439035831.25276150_1439058200.88253150_1439365111.8718150_1439355722.14007150_1439640393.29891150_1438882822.539150_1439212932.55202150_1438873440.60595150_1439139450.88253150_1439124750.98095150_1439133173.22219150_1439383640.94895150_1439410371.0116150_1438707900.84715150_1439318871.0116150_1439631393.4095150_1438753150.84715150_1438721381.46626150_1439001321.7492150_1439497652.8622150_1438859812.95751150_1438921553.82864150_1439057251.0116150_1439176011.17865150_1439506191.04134150_1438979712.07944150_1438948922.23356150_1439302132.4987312134386871.0150_1439491442.78809127_1437810410.69315127_1438509350.69315127_1438502350.69315127_1436387680.69315127_1438581941.94591127_1435927960.69315127_1436046280.69315127_1435864960.69315127_1435690542.07944127_1434855791.09861127_1437839520.69315127_1437530740.69315127_1438112040.69315127_1436060750.69315127_1436477201.79176127_1434613570.69315127_1437156590.69315127_1435812220.69315127_1436574792.56495127_1435049600.69315127_1437488720.69315127_1434895760.69315127_1434683210.69315127_1435843270.69315127_1437679580.69315127_1435490320.69315127_1437219702.19722127_1434392070.69315127_1437417330.69315127_1436412180.69315127_1435912070.69315127_1438453521.09861127_1437734580.69315127_1435984561.60944127_1435800902.99573127_1437640170.69315127_1437911790.69315127_1435351791.79176127_1434537300.69315127_1436341610.69315127_1438226010.69315127_1435121832.30259127_1437605990.69315127_1436884820.69315127_1437985440.69315127_1436465340.69315127_1438370351.38629127_1437364230.69315127_1437207231.09861127_1438065410.69315127_1436209750.69315127_1434488600.69315127_1434758691.09861127_1435239331.09861127_1436296990.69315127_1437752380.69315127_1437853990.69315127_1434641230.69315127_1434701140.69315127_1437882660.69315127_1436504310.69315127_1434497691.09861127_1436761472.94444127_1434714540.69315127_1434763113.85015109_144508772.30259109_144474141.79176109_144464420.69315109_144509890.69315109_144516362.77259109_144490820.69315109_144572042.07944109_144490783.7612109_144506563.3322109_144506574.94164109_144490814.33073109_144557042.19722109_144493123.17805109_144508730.69315109_144514480.69315109_144518221.38629109_144508652.94444109_144511161.60944109_144468722.48491109_144508752.07944109_144508831.38629109_144464511.38629109_144511240.69315109_144511150.69315109_144568490.69315109_144508722.19722109_144533093.21888109_144509951.09861109_144516393.04452109_144506582.94444109_144506591.09861109_144490833.09104109_144508700.69315109_144501740.69315109_144508382.48491110_149599610.69315110_146262140.69315110_1428695011.09861110_145999150.69315110_1433163482.99573110_1430405010.69315110_146290251.60944110_1429852790.69315110_1419341840.69315110_148850781.09861110_145422040.69315110_1418120830.69315110_149531620.69315110_1432031330.69315110_1429433431.38629110_1424897380.69315110_147214711.09861110_1423675700.69315110_1422036600.69315110_1417525730.69315110_1426118342.07944110_145020591.79176110_1432937480.69315110_146304780.69315110_1412171380.69315110_1421373250.69315110_146614250.69315110_1433904060.69315110_1411231720.69315110_1424205430.69315110_1432260140.69315110_1412836450.69315110_1426444320.69315110_1410078590.69315110_1411905300.69315110_1429228811.60944110_147048730.69315110_1430298410.69315110_1423352520.69315110_1410293130.69315110_1424799430.69315110_147035341.09861110_1419137440.69315110_147930221.79176110_147386400.69315110_1431273980.69315110_1421122950.69315110_1430506090.69315110_1432551281.09861110_1430257551.79176110_1422069110.69315110_1415126410.69315110_1423708150.69315110_1411062661.09861110_1429642870.69315110_1411637052.63906110_1429564160.69315110_1432662971.38629110_1421332632.07944110_1420880240.69315110_1429341510.69315110_1430683730.69315110_148036760.69315110_149947380.69315110_1414573990.69315110_147069000.69315110_1417237860.69315110_1410243030.69315110_1429851070.69315110_1428404920.69315110_1420016210.69315110_1422670320.69315110_1428114120.69315110_1410842131.09861110_1429016260.69315110_1423144462.30259110_1420640920.69315110_1430335090.69315110_1422982520.69315110_1432706623.13549110_1433573080.69315110_1418390780.69315110_1430097030.69315110_149085410.69315110_147934220.69315110_1428865470.69315110_1410532450.69315110_1431875040.69315110_1433432480.69315110_1417328641.94591110_1428340530.69315110_1429637575.40717110_1426835550.69315110_1411526090.69315110_1431936720.69315110_1418785661.09861110_1424519021.38629110_1429010850.69315110_1413047212.07944110_1429904841.09861110_1428115731.38629110_149622190.69315110_1431497564.11087110_1433957640.69315110_1430012330.69315110_1411764012.56495110_1423908790.6931512234387621.012434387691.0
        }

    @cached_property
    def train_data(self) -> dd.DataFrame:
        """
        Returns
        -------
        dd.DataFrame
        """
        return dd.read_csv(
            urlpath=self.file_data_train,
            sep=",",
            dtype=self.dtypes_data,
            names=self.columns_data,
        )

    @cached_property
    def train_features(self) -> dd.DataFrame:
        """
        Returns
        -------
        dd.DataFrame
        """
        return dd.read_csv(
            urlpath=self.file_features_train,
            sep=",",
            dtype=self.dtypes_features,
            names=self.columns_features,
        )

    @cached_property
    def test_data(self) -> dd.DataFrame:
        """
        Returns
        -------
        dd.DataFrame
        """
        return dd.read_csv(
            urlpath=self.file_data_test,
            sep=",",
            dtype=self.dtypes_data,
            names=self.columns_data,
        )

    @cached_property
    def test_features(self) -> dd.DataFrame:
        """
        Returns
        -------
        dd.DataFrame
        """
        return dd.read_csv(
            urlpath=self.file_features_test,
            sep=",",
            dtype=self.dtypes_features,
            names=self.columns_features,
        )


class StatisticsAliCCP:
    def __init__(self, dataset: DatasetAliCCP, dir_statistics: str):
        self.dataset = dataset

        self.dir_statistics = os.path.join(
            dir_statistics,
            "Ali-CCP",
            "",
        )

        self.df = self._create_df

    @cached_property
    def _create_df(self) -> dd.DataFrame:
        # Here we create a dataframe with form: user_id (int32), item_id (int32), click (boolean), conversion (boolean)
        df_users_train = extract_user_id(
            df=self.dataset.train_features,
        )
        df_users_test = extract_user_id(
            df=self.dataset.test_features,
        )

        df_items_train = extract_item_id(
            df=self.dataset.train_data,
        )
        df_items_test = extract_item_id(
            df=self.dataset.test_data,
        )

        df_features = dd.concat(
            dfs=[df_users_train, df_users_test],
            axis="index",
        )

        df_data = dd.concat(
            dfs=[df_items_train, df_items_test],
            axis="index",
        )

        return dd.merge(
            left=df_data[
                [
                    "item_id",
                    "num_clicks",
                    "num_conversions",
                    "common_feature_index",
                ]
            ],
            right=df_features[
                [
                    "user_id",
                    "common_feature_index",
                ]
            ],
            on="common_feature_index",
            how="inner",
        )

    @cached_property
    def num_users(self) -> int:
        return self.df["user_id"].nunique()

    @cached_property
    def num_items(self) -> int:
        return self.df["item_id"].nunique()

    @cached_property
    def num_interactions(self) -> int:
        return ((self.df["num_clicks"] > 0) | (self.df["num_conversions"] > 0)).sum()

    @cached_property
    def num_impressions(self) -> int:
        return ((self.df["num_clicks"] == 0) & (self.df["num_conversions"] == 0)).sum()

    @cached_property
    def num_recommendations(self) -> int:
        return self.df.shape[0]

    def statistics(self) -> dict[str, Any]:
        statistics = delayed(
            {
                "dataset": "Ali-CCP",
                "num_users": self.num_users,
                "num_items": self.num_items,
                "num_impressions": self.num_impressions,
                "num_interactions": self.num_interactions,
                "num_recommendations": self.num_recommendations,
                "quota_interactions_impressions": (
                    self.num_interactions / self.num_impressions
                ),
                "quota_impressions_interactions": (
                    self.num_impressions / self.num_interactions
                ),
            }
        )

        return statistics.compute()
